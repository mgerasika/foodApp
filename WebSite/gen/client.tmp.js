/* Generated by SharpKit 5 v5.5.0 */
if (typeof ($Inherit) == 'undefined') {
	var $Inherit = function (ce, ce2) {

		if (typeof (Object.getOwnPropertyNames) == 'undefined') {

			for (var p in ce2.prototype)
				if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p])
					ce.prototype[p] = ce2.prototype[p];
			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		} else {

			var props = Object.getOwnPropertyNames(ce2.prototype);
			for (var i = 0; i < props.length; i++)
				if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined')
					Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));

			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		}

	}
};

if (typeof ($CreateAnonymousDelegate) == 'undefined') {
    var $CreateAnonymousDelegate = function (target, func) {
        if (target == null || func == null)
            return func;
        var delegate = function () {
            return func.apply(target, arguments);
        };
        delegate.func = func;
        delegate.target = target;
        delegate.isDelegate = true;
        return delegate;
    }
}

if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}


if (typeof(FoodApp) == "undefined")
    var FoodApp = {};
if (typeof(FoodApp.Client) == "undefined")
    FoodApp.Client = {};
FoodApp.Client.ngControllerBase = function (){
    angularjs.angularController.call(this);
};
FoodApp.Client.ngControllerBase.prototype.get_className = function (){
    return "ngControllerBase";
};
FoodApp.Client.ngControllerBase.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngControllerBase.prototype.init = function (scope, http, loc, filter){
    angularjs.angularController.prototype.init.call(this, scope, http, loc, filter);
};
FoodApp.Client.ngControllerBase.prototype.showErrorPopup = function (){
    document.getElementById("error").style.display = "block";
};
FoodApp.Client.ngControllerBase.prototype.onRequestSuccess = function (o, s, arg3){
};
FoodApp.Client.ngControllerBase.prototype.onRequestFailed = function (jsError, jsString, arg3){
    FoodApp.Common.jsUtils.inst.hideLoading();
};
$Inherit(FoodApp.Client.ngControllerBase, angularjs.angularController);
FoodApp.Client.ngReviewController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngReviewController.inst = new FoodApp.Client.ngReviewController();
FoodApp.Client.ngReviewController.prototype.get_className = function (){
    return "ngReviewController";
};
FoodApp.Client.ngReviewController.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngReviewController.prototype.get_ngReviewModel = function (){
    return this._scope["ngReviewModel"];
};
FoodApp.Client.ngReviewController.prototype.set_ngReviewModel = function (value){
    this._scope["ngReviewModel"] = value;
};
FoodApp.Client.ngReviewController.prototype.get_ngIsInit = function (){
    return this._scope["ngIsInit"];
};
FoodApp.Client.ngReviewController.prototype.set_ngIsInit = function (value){
    this._scope["ngIsInit"] = value;
};
FoodApp.Client.ngReviewController.prototype.get_ngFoods = function (){
    return this._scope["ngFoods"];
};
FoodApp.Client.ngReviewController.prototype.set_ngFoods = function (value){
    this._scope["ngFoods"] = value;
};
FoodApp.Client.ngReviewController.prototype.get_ngTotalOrders = function (){
    return this._scope["ngTotalOrders"];
};
FoodApp.Client.ngReviewController.prototype.set_ngTotalOrders = function (value){
    this._scope["ngTotalOrders"] = value;
};
FoodApp.Client.ngReviewController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngReviewModel( []);
    this.set_ngFoods( []);
    this.set_ngTotalOrders( []);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.dayChanged, $CreateAnonymousDelegate(this, function (n){
        this.requestGetFoods();
    }));
};
FoodApp.Client.ngReviewController.prototype.findFoodById = function (id){
    var res = null;
    for (var $i2 = 0,$t2 = this.get_ngFoods(),$l2 = $t2.length,item = $t2[$i2]; $i2 < $l2; $i2++, item = $t2[$i2]){
        if (item.FoodId == id){
            res = item;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngReviewController.prototype.getFoodItem_ReviewCtrl = function (id){
    var item = this.findFoodById(id);
    return item;
};
FoodApp.Client.ngReviewController.prototype.formatCount_ReviewCtrl = function (order){
    var res = order.Count + "";
    var food = this.getFoodItem_ReviewCtrl(order.FoodId);
    if (food.isByWeightItem){
        res = parseInt((order.Count * 100), 10) + "";
    }
    return res;
};
FoodApp.Client.ngReviewController.prototype.requestGetFoods = function (){
    FoodApp.Common.JsService.Inst.FoodApi.GetFoodsByDay(FoodApp.Common.JsService.Inst.FoodApi.getUserId(), FoodApp.Client.ngAppController.inst.get_ngDayOfWeek(), $CreateAnonymousDelegate(this, function (data){
        this.set_ngFoods(data);
        this.requestGetUsers();
    }));
};
FoodApp.Client.ngReviewController.prototype.requestGetUsers = function (){
    FoodApp.Common.JsService.Inst.UsersApi.GetUsers($CreateAnonymousDelegate(this, function (users){
        var tmp =  [];
        for (var $i3 = 0,$l3 = users.length,ngUser = users[$i3]; $i3 < $l3; $i3++, ngUser = users[$i3]){
            if (-1 != ngUser.Email.indexOf("darwins")){
                tmp.push(ngUser);
            }
        }
        if (tmp.length > 0){
            this.requestGetOrders(tmp);
        }
    }));
};
FoodApp.Client.ngReviewController.prototype.requestGetOrders = function (tmp){
    this.getOrdersRecursive(tmp,  [], $CreateAnonymousDelegate(this, function (result){
        this.set_ngIsInit(true);
        this.set_ngTotalOrders(this.createTotalOrders(result));
        this.set_ngReviewModel(result);
        this._scope.$apply();
    }));
};
FoodApp.Client.ngReviewController.prototype.createTotalOrders = function (items){
    var res =  [];
    for (var $i4 = 0,$l4 = items.length,reviewModel = items[$i4]; $i4 < $l4; $i4++, reviewModel = items[$i4]){
        for (var $i5 = 0,$t5 = reviewModel.orders,$l5 = $t5.length,order = $t5[$i5]; $i5 < $l5; $i5++, order = $t5[$i5]){
            var foodItem = this.findFoodById(order.FoodId);
            FoodApp.Common.jsCommonUtils.inst.assert(null != foodItem);
            if (!this.conainsFoodId(res, order.FoodId)){
                var totalOrder = {};
                totalOrder.FoodId = order.FoodId;
                if (foodItem.isByWeightItem){
                    totalOrder.Count = 1;
                }
                else {
                    totalOrder.Count = order.Count;
                }
                res.push(totalOrder);
            }
            else {
                var totalOrder = this.getOrderByFoodId(res, order.FoodId);
                if (foodItem.isByWeightItem){
                    totalOrder.Count += 1;
                }
                else {
                    totalOrder.Count += order.Count;
                }
            }
        }
    }
    res = this.groupByCategory(res);
    return res;
};
FoodApp.Client.ngReviewController.prototype.groupByCategory = function (items){
    var res =  [];
    var salats =  [];
    var first =  [];
    var garnirs =  [];
    var others =  [];
    for (var $i6 = 0,$l6 = items.length,item = items[$i6]; $i6 < $l6; $i6++, item = items[$i6]){
        var food = this.findFoodById(item.FoodId);
        if (food.isSalat){
            salats.push(item);
        }
        else if (food.isFirst){
            first.push(item);
        }
        else if (food.isGarnir){
            garnirs.push(item);
        }
        else {
            others.push(item);
        }
    }
    FoodApp.Common.jsUtils.inst.addRange(res, salats);
    FoodApp.Common.jsUtils.inst.addRange(res, first);
    FoodApp.Common.jsUtils.inst.addRange(res, garnirs);
    FoodApp.Common.jsUtils.inst.addRange(res, others);
    return res;
};
FoodApp.Client.ngReviewController.prototype.conainsFoodId = function (items, foodId){
    var res = false;
    for (var $i7 = 0,$l7 = items.length,item = items[$i7]; $i7 < $l7; $i7++, item = items[$i7]){
        if (item.FoodId == foodId){
            res = true;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngReviewController.prototype.getOrderByFoodId = function (items, foodId){
    var res = null;
    for (var $i8 = 0,$l8 = items.length,item = items[$i8]; $i8 < $l8; $i8++, item = items[$i8]){
        if (item.FoodId == foodId){
            res = item;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngReviewController.prototype.getOrdersRecursive = function (users, res, complete){
    if (users.length > 0){
        var ngUser = users.pop();
        FoodApp.Common.JsService.Inst.OrderApi.GetOrdersByDay(ngUser.Id, FoodApp.Client.ngAppController.inst.get_ngDayOfWeek(), $CreateAnonymousDelegate(this, function (data){
            if (data.length > 0){
                var model = {};
                model.user = ngUser;
                model.orders = this.removeContainersFromOrders(data);
                res.push(model);
            }
            this.getOrdersRecursive(users, res, complete);
        }));
    }
    else {
        complete(res);
    }
};
FoodApp.Client.ngReviewController.prototype.removeContainersFromOrders = function (data){
    var res =  [];
    for (var $i9 = 0,$l9 = data.length,entry = data[$i9]; $i9 < $l9; $i9++, entry = data[$i9]){
        var foodItem = this.findFoodById(entry.FoodId);
        if (!(foodItem.isContainer || foodItem.isBigContainer || foodItem.isSmallContainer)){
            res.push(entry);
        }
    }
    return res;
};
$Inherit(FoodApp.Client.ngReviewController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngMoneyController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngMoneyController.inst = new FoodApp.Client.ngMoneyController();
FoodApp.Client.ngMoneyController.prototype.get_className = function (){
    return "ngMoneyController";
};
FoodApp.Client.ngMoneyController.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngMoneyController.prototype.get_ngEntry = function (){
    return this._scope["ngEntry"];
};
FoodApp.Client.ngMoneyController.prototype.set_ngEntry = function (value){
    this._scope["ngEntry"] = value;
};
FoodApp.Client.ngMoneyController.prototype.get_ngUsers = function (){
    return this._scope["ngUsers"];
};
FoodApp.Client.ngMoneyController.prototype.set_ngUsers = function (value){
    this._scope["ngUsers"] = value;
};
FoodApp.Client.ngMoneyController.prototype.get_ngAddMoneyModel = function (){
    return this._scope["ngAddMoneyModel"];
};
FoodApp.Client.ngMoneyController.prototype.set_ngAddMoneyModel = function (value){
    this._scope["ngAddMoneyModel"] = value;
};
FoodApp.Client.ngMoneyController.prototype.buyMoneyClick = function (){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.MoneyApi.Buy(FoodApp.Client.ngAppController.inst.get_ngDayOfWeek(), $CreateAnonymousDelegate(this, function (){
        this.refresh();
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.addMoneyClick = function (userId, val){
    FoodApp.Common.jsUtils.inst.showLoading();
    val = FoodApp.Client.ngMoneyController.fixDecimal(val);
    FoodApp.Common.JsService.Inst.MoneyApi.AddMoney(userId, val, $CreateAnonymousDelegate(this, function (){
        this.requestGetMoney(userId, $CreateAnonymousDelegate(this, function (arg){
            this.get_ngAddMoneyModel().total = arg;
            this._scope.$apply();
        }));
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.fixDecimal = function (val){
    return val;
};
FoodApp.Client.ngMoneyController.prototype.checkMoneyClick = function (userId){
    FoodApp.Common.jsUtils.inst.showLoading();
    this.requestGetMoney(userId, $CreateAnonymousDelegate(this, function (arg){
        this.get_ngAddMoneyModel().total = arg;
        this._scope.$apply();
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.removeMoneyClick = function (userId, val){
    FoodApp.Common.jsUtils.inst.showLoading();
    val = FoodApp.Client.ngMoneyController.fixDecimal(val);
    FoodApp.Common.JsService.Inst.MoneyApi.RemoveMoney(userId, val, $CreateAnonymousDelegate(this, function (){
        this.requestGetMoney(userId, $CreateAnonymousDelegate(this, function (arg){
            this.get_ngAddMoneyModel().total = arg;
            this._scope.$apply();
        }));
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.requestGetMoney = function (userId, complete){
    FoodApp.Common.JsService.Inst.MoneyApi.GetMoney(userId, $CreateAnonymousDelegate(this, function (res){
        if (null != complete){
            complete(res);
        }
    }));
};
FoodApp.Client.ngMoneyController.prototype.refundMoneyClick = function (){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.MoneyApi.Refund(FoodApp.Client.ngAppController.inst.get_ngDayOfWeek(), $CreateAnonymousDelegate(this, function (){
        this.refresh();
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.canBuyMoneyClick = function (day){
    FoodApp.Common.jsUtils.inst.showLoading();
    this.requestCanBuy(day, $CreateAnonymousDelegate(this, function (){
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.canRefundMoneyClick = function (day){
    FoodApp.Common.jsUtils.inst.showLoading();
    this.requestCanRefund(day, $CreateAnonymousDelegate(this, function (){
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngMoneyController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngEntry({});
    this.set_ngAddMoneyModel({});
    this.set_ngUsers( []);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.settingsLoaded, $CreateAnonymousDelegate(this, function (n){
        console.log("settings loaded");
        window.setTimeout($CreateAnonymousDelegate(this, function (){
            FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.orderListChanged, $CreateAnonymousDelegate(this, function (n2){
                console.log("order list changed");
                this.refresh();
            }));
        }), 1000);
    }));
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.dayChanged, $CreateAnonymousDelegate(this, function (n){
        console.log("money day changed");
        this.refresh();
    }));
    this.requestGetUsers($CreateAnonymousDelegate(this, function (){
    }));
};
FoodApp.Client.ngMoneyController.prototype.requestCanBuy = function (day, complete){
    FoodApp.Common.JsService.Inst.MoneyApi.CanBuy(day, $CreateAnonymousDelegate(this, function (res){
        this.get_ngEntry().canBuy = FoodApp.Common.jsCommonUtils.inst.toBool(res);
        console.log("request can buy for day = " + day + " response = " + this.get_ngEntry().canBuy);
        if (null != complete){
            complete();
        }
    }));
};
FoodApp.Client.ngMoneyController.prototype.requestGetUsers = function (complete){
    FoodApp.Common.JsService.Inst.UsersApi.GetUsers($CreateAnonymousDelegate(this, function (res){
        var tmp =  [];
        for (var $i10 = 0,$l10 = res.length,user = res[$i10]; $i10 < $l10; $i10++, user = res[$i10]){
            if (-1 != user.Email.indexOf("darwins")){
                tmp.push(user);
            }
        }
        this.set_ngUsers(tmp);
        if (null != complete){
            complete();
        }
    }));
};
FoodApp.Client.ngMoneyController.prototype.hasOrders = function (){
    var day = FoodApp.Client.ngAppController.inst.get_ngDayOfWeek();
    var orders = FoodApp.Client.ngOrderController.inst.getOrders(day);
    var res = orders != null && orders.length > 0;
    return res;
};
FoodApp.Client.ngMoneyController.prototype.requestCanRefund = function (day, complete){
    FoodApp.Common.JsService.Inst.MoneyApi.CanRefund(day, $CreateAnonymousDelegate(this, function (res){
        this.get_ngEntry().canRefund = FoodApp.Common.jsCommonUtils.inst.toBool(res);
        console.log("request can refund for day = " + day + " response = " + this.get_ngEntry().canRefund);
        if (null != complete){
            complete();
        }
    }));
};
FoodApp.Client.ngMoneyController.prototype.refresh = function (){
    var userId = FoodApp.Common.JsService.Inst.MoneyApi.getUserId();
    console.log("money refresh");
    FoodApp.Common.jsUtils.inst.showLoading();
    var day = FoodApp.Client.ngAppController.inst.get_ngDayOfWeek();
    this.requestCanBuy(day, $CreateAnonymousDelegate(this, function (){
        this.requestCanRefund(day, $CreateAnonymousDelegate(this, function (){
            this.requestGetMoney(userId, $CreateAnonymousDelegate(this, function (val){
                this.get_ngEntry().total = val;
                this._scope.$apply();
                FoodApp.Common.jsUtils.inst.hideLoading();
            }));
        }));
    }));
};
$Inherit(FoodApp.Client.ngMoneyController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngErrorController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngErrorController.inst = new FoodApp.Client.ngErrorController();
FoodApp.Client.ngErrorController.prototype.get_className = function (){
    return "ngErrorController";
};
FoodApp.Client.ngErrorController.prototype.get_ngErrorModel = function (){
    return this._scope["ngErrorModel"];
};
FoodApp.Client.ngErrorController.prototype.set_ngErrorModel = function (value){
    this._scope["ngErrorModel"] = value;
};
FoodApp.Client.ngErrorController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.requestGetErrors();
};
FoodApp.Client.ngErrorController.prototype.requestGetErrors = function (){
    $.ajax({
        type: "GET",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/error",
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.set_ngErrorModel(res);
            this._scope.$apply();
        })
    });
};
FoodApp.Client.ngErrorController.prototype.onDeleteClick = function (id){
    $.ajax({
        type: "DELETE",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/error/" + id,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.requestGetErrors();
        })
    });
};
FoodApp.Client.ngErrorController.prototype.onDeleteAllClick = function (){
    $.ajax({
        type: "DELETE",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/error",
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.requestGetErrors();
        })
    });
};
$Inherit(FoodApp.Client.ngErrorController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngHistoryModel = function (){
    this.Email = null;
    this.UserId = null;
    this.Entries = null;
    this.Entries = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryEntry");
};
FoodApp.Client.ngHistoryModel.prototype.GetEntriesByDate = function (dt){
    var res = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryEntry");
    var $it10 = this.Entries.GetEnumerator();
    while ($it10.MoveNext()){
        var entry = $it10.get_Current();
        if (FoodApp.Common.ApiUtils.EqualDate(entry.Date, dt)){
            res.Add(entry);
        }
    }
    return res;
};
FoodApp.Client.ngHistoryModel.prototype.GroupByDate = function (dayOfWeek){
    var res = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryGroupEntry");
    var $it11 = this.Entries.GetEnumerator();
    while ($it11.MoveNext()){
        var entry = $it11.get_Current();
        var food = FoodApp.Common.Managers.FoodManager.Inst.GetFoodById$$String(entry.FoodId);
        var ofWeek = entry.Date.get_DayOfWeek();
        if (null != food && !food.isContainer && (ofWeek == dayOfWeek + 1)){
            var key = entry.Date.ToShortDateString();
            if (!this.HasGroupByDate(res, key)){
                var newGroup = {};
                newGroup.DateStr = key;
                res.Add(newGroup);
            }
            this.GetGroupByDate(res, key).Entries.Add(entry);
        }
    }
    return res;
};
FoodApp.Client.ngHistoryModel.prototype.GroupByDate = function (){
    var res = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryGroupEntry");
    this.Entries = System.Linq.Enumerable.ToList$1("FoodApp.Common.ngHistoryEntry", System.Linq.Enumerable.OrderByDescending$2$$IEnumerable$1$$Func$2("FoodApp.Common.ngHistoryEntry", System.DateTime.ctor, this.Entries, $CreateAnonymousDelegate(this, function (o){
        return o.Date;
    })));
    var $it12 = this.Entries.GetEnumerator();
    while ($it12.MoveNext()){
        var entry = $it12.get_Current();
        var food = FoodApp.Common.Managers.FoodManager.Inst.GetFoodById$$String(entry.FoodId);
        if (null != food && !food.isContainer){
            var key = entry.Date.ToShortDateString();
            if (!this.HasGroupByDate(res, key)){
                var newGroup = {};
                newGroup.DateStr = key;
                res.Add(newGroup);
            }
            this.GetGroupByDate(res, key).Entries.Add(entry);
        }
    }
    return res;
};
FoodApp.Client.ngHistoryModel.prototype.HasGroupByDate = function (items, dateStr){
    var res = false;
    var $it13 = items.GetEnumerator();
    while ($it13.MoveNext()){
        var entry = $it13.get_Current();
        if (entry.DateStr.Equals$$String$$StringComparison(dateStr, 5)){
            res = true;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngHistoryModel.prototype.GetGroupByDate = function (items, dateStr){
    var res = null;
    var $it14 = items.GetEnumerator();
    while ($it14.MoveNext()){
        var entry = $it14.get_Current();
        if (entry.DateStr.Equals$$String$$StringComparison(dateStr, 5)){
            res = entry;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngHistoryModel.prototype.GroupByFoodId = function (){
    var res = new System.Collections.Generic.Dictionary$2.ctor(System.String.ctor, System.Collections.Generic.List$1.ctor);
    var $it15 = this.Entries.GetEnumerator();
    while ($it15.MoveNext()){
        var entry = $it15.get_Current();
        var food = FoodApp.Common.Managers.FoodManager.Inst.GetFoodById$$String(entry.FoodId);
        if (null != food && !food.isContainer){
            if (!res.ContainsKey(entry.FoodId)){
                res.set_Item$$TKey(entry.FoodId, new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryEntry"));
            }
            res.get_Item$$TKey(entry.FoodId).Add(entry);
        }
    }
    return res;
};
$Inherit(FoodApp.Client.ngHistoryModel, FoodApp.Common.ngModelBase);
FoodApp.Client.ngPropousalContoller = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngPropousalContoller.inst = new FoodApp.Client.ngPropousalContoller();
FoodApp.Client.ngPropousalContoller.prototype.get_className = function (){
    return "ngPropousalContoller";
};
FoodApp.Client.ngPropousalContoller.prototype.get_ngItems = function (){
    return this._scope["ngItems"];
};
FoodApp.Client.ngPropousalContoller.prototype.set_ngItems = function (value){
    this._scope["ngItems"] = value;
};
FoodApp.Client.ngPropousalContoller.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngItems( []);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.settingsLoaded, $CreateAnonymousDelegate(this, function (n){
        this.requestRefreshPropousals(null);
    }));
};
FoodApp.Client.ngPropousalContoller.prototype.getFoodItem = function (id){
    var item = FoodApp.Client.ngFoodController.inst.findFoodById(id);
    return item;
};
FoodApp.Client.ngPropousalContoller.prototype.requestRefreshPropousals = function (handler){
    FoodApp.Common.ajaxHlp.inst.SendGet("json", "api/propousal/" + FoodApp.Client.ngAppController.inst.get_ngUserId() + "/", $CreateAnonymousDelegate(this, function (o, s, arg3){
        this.set_ngItems(o);
        this._scope.$apply();
        if (null != handler){
            handler();
        }
    }), $CreateDelegate(this, this.onRequestFailed));
};
FoodApp.Client.ngPropousalContoller.prototype.refreshPropousalsClick = function (){
    FoodApp.Common.jsUtils.inst.showLoading();
    this.requestRefreshPropousals($CreateAnonymousDelegate(this, function (){
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngPropousalContoller.prototype.hasPropousal = function (dayOfWeek){
    var ngFoodRates = this.get_ngItems()[dayOfWeek];
    return ngFoodRates != null && ngFoodRates.length > 0;
};
FoodApp.Client.ngPropousalContoller.prototype.makePropousalClick = function (dayOfWeek){
    FoodApp.Common.jsUtils.inst.showLoading();
    var ngFoodRates = this.get_ngItems()[dayOfWeek];
    FoodApp.Common.ajaxHlp.inst.SendPost("json", "api/propousal/" + FoodApp.Client.ngAppController.inst.get_ngUserId() + "/" + dayOfWeek + "/", JSON.stringify(ngFoodRates), $CreateAnonymousDelegate(this, function (){
        FoodApp.Client.ngOrderController.inst.refreshOrders();
        FoodApp.Common.jsUtils.inst.hideLoading();
    }), $CreateDelegate(this, this.onRequestFailed));
};
$Inherit(FoodApp.Client.ngPropousalContoller, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngPropousalFilter = function (){
};
FoodApp.Client.ngPropousalFilter.prototype.get_className = function (){
    return "ngPropousalFilter";
};
FoodApp.Client.ngPropousalFilter.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngPropousalFilter.prototype.get_filterName = function (){
    return "propousalFilter";
};
angularUtils.inst.registerFilterType(new FoodApp.Client.ngPropousalFilter());
FoodApp.Client.ngPropousalFilter.prototype.filter = function (obj, arg){
    var day = arg["day"];
    var allPropousals = obj;
    var res = allPropousals[day];
    return res;
};
FoodApp.Client.ngHistoryController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngHistoryController.inst = new FoodApp.Client.ngHistoryController();
FoodApp.Client.ngHistoryController.prototype.get_className = function (){
    return "ngHistoryController";
};
FoodApp.Client.ngHistoryController.prototype.get_ngHistoryItems = function (){
    return this._scope["ngHistoryItems"];
};
FoodApp.Client.ngHistoryController.prototype.set_ngHistoryItems = function (value){
    this._scope["ngHistoryItems"] = value;
};
FoodApp.Client.ngHistoryController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngHistoryItems( []);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.settingsLoaded, $CreateAnonymousDelegate(this, function (n){
        this.refreshHistory();
    }));
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.orderCompleted, $CreateAnonymousDelegate(this, function (n){
        this.refreshHistory();
    }));
};
FoodApp.Client.ngHistoryController.prototype.getFoodItem = function (id){
    var item = FoodApp.Client.ngFoodController.inst.findFoodById(id);
    return item;
};
FoodApp.Client.ngHistoryController.prototype.refreshHistory = function (){
    FoodApp.Common.ajaxHlp.inst.SendGet("json", "api/history/" + FoodApp.Client.ngAppController.inst.get_ngUserId() + "/", $CreateAnonymousDelegate(this, function (o, s, arg3){
        this.set_ngHistoryItems(o);
        this._scope.$apply();
    }), $CreateDelegate(this, this.onRequestFailed));
};
FoodApp.Client.ngHistoryController.prototype.deleteHistoryClick = function (group){
    FoodApp.Common.ajaxHlp.inst.SendPost("json", "api/history/delete/" + FoodApp.Client.ngAppController.inst.get_ngUserId() + "/", JSON.stringify(group), $CreateAnonymousDelegate(this, function (){
        this.refreshHistory();
    }), $CreateDelegate(this, this.onRequestFailed));
};
$Inherit(FoodApp.Client.ngHistoryController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngAppController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngAppController.inst = new FoodApp.Client.ngAppController();
FoodApp.Client.ngAppController.prototype.get_className = function (){
    return "ngAppController";
};
FoodApp.Client.ngAppController.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngAppController.prototype.get_ngUserId = function (){
    return this._scope["ngUserId"];
};
FoodApp.Client.ngAppController.prototype.set_ngUserId = function (value){
    this._scope["ngUserId"] = value;
};
FoodApp.Client.ngAppController.prototype.get_ngDayOfWeek = function (){
    return this._scope["ngDayOfWeek"];
};
FoodApp.Client.ngAppController.prototype.set_ngDayOfWeek = function (value){
    this._scope["ngDayOfWeek"] = value;
};
FoodApp.Client.ngAppController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngDayOfWeek(0);
    this.set_ngUserId(document.getElementById("userId").value);
    FoodApp.Common.JsService.Inst.Init(FoodApp.Common.jsCommonUtils.inst.getLocation(), this.get_ngUserId());
    console.log("email=" + this.get_ngUserId());
    window.setTimeout($CreateAnonymousDelegate(this, function (){
        FoodApp.Common.eventManager.inst.fire(FoodApp.Common.eventManager.settingsLoaded, "");
    }), 1);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.dayChanged, $CreateAnonymousDelegate(this, function (day){
        console.log("day changed " + day);
        this.set_ngDayOfWeek(day);
    }));
};
$Inherit(FoodApp.Client.ngAppController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngOrderFilter = function (){
};
FoodApp.Client.ngOrderFilter.prototype.get_className = function (){
    return "ngOrderFilter";
};
FoodApp.Client.ngOrderFilter.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngOrderFilter.prototype.get_filterName = function (){
    return "orderFilter";
};
angularUtils.inst.registerFilterType(new FoodApp.Client.ngOrderFilter());
FoodApp.Client.ngOrderFilter.prototype.filter = function (obj, arg){
    var res =  [];
    var day = arg["day"];
    var allOrders = obj;
    var tmp = allOrders[day];
    if (tmp != null && tmp.length > 0){
        for (var $i17 = 0,$l17 = tmp.length,order = tmp[$i17]; $i17 < $l17; $i17++, order = tmp[$i17]){
            var foodItem = FoodApp.Client.ngFoodController.inst.findFoodById(order.FoodId);
            if (null != foodItem && !foodItem.isContainer){
                res.push(order);
            }
        }
    }
    return res;
};
FoodApp.Client.ngToolsController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngToolsController.inst = new FoodApp.Client.ngToolsController();
FoodApp.Client.ngToolsController.prototype.get_className = function (){
    return "ngToolsController";
};
FoodApp.Client.ngToolsController.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngToolsController.prototype.clearTodayOrdersClick = function (){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.ToolsApi.ClearTodayOrders($CreateAnonymousDelegate(this, function (data){
        FoodApp.Common.jsUtils.inst.hideLoading();
    }));
};
FoodApp.Client.ngToolsController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
};
$Inherit(FoodApp.Client.ngToolsController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngTraceController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngTraceController.inst = new FoodApp.Client.ngTraceController();
FoodApp.Client.ngTraceController.prototype.get_className = function (){
    return "ngTraceController";
};
FoodApp.Client.ngTraceController.prototype.get_ngTraceModel = function (){
    return this._scope["ngTraceModel"];
};
FoodApp.Client.ngTraceController.prototype.set_ngTraceModel = function (value){
    this._scope["ngTraceModel"] = value;
};
FoodApp.Client.ngTraceController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.requestGetTraces();
};
FoodApp.Client.ngTraceController.prototype.requestGetTraces = function (){
    $.ajax({
        type: "GET",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/trace",
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.set_ngTraceModel(res);
            this._scope.$apply();
        })
    });
};
FoodApp.Client.ngTraceController.prototype.onDeleteClick = function (id){
    $.ajax({
        type: "DELETE",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/trace/" + id,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.requestGetTraces();
        })
    });
};
FoodApp.Client.ngTraceController.prototype.onDeleteAllClick = function (){
    $.ajax({
        type: "DELETE",
        dataType: "json",
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/api/trace",
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            var res = o;
            this.requestGetTraces();
        })
    });
};
$Inherit(FoodApp.Client.ngTraceController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngUsersSettingsModel = function (){
    this.FoodRates = null;
    this.Email = null;
    this.UserId = null;
    this.FoodRates = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngFoodRate");
};
FoodApp.Client.ngUsersSettingsModel.prototype.GetFoodRateById = function (foodId){
    var res = null;
    var $it17 = this.FoodRates.GetEnumerator();
    while ($it17.MoveNext()){
        var r = $it17.get_Current();
        if (FoodApp.Common.CommonUtils.Equals$$String$$String(r.FoodId, foodId)){
            res = r;
            break;
        }
    }
    return res;
};
FoodApp.Client.ngUsersSettingsModel.prototype.EnsureFoodRate = function (foodId){
    var res = this.GetFoodRateById(foodId);
    if (null == res){
        res = {};
        res.FoodId = foodId;
        this.FoodRates.Add(res);
    }
    return res;
};
FoodApp.Client.ngUsersSettingsModel.prototype.Fix = function (){
    var ratesThatNeedRemove = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngFoodRate");
    var $it18 = this.FoodRates.GetEnumerator();
    while ($it18.MoveNext()){
        var foodRate = $it18.get_Current();
        var food = FoodApp.Common.Managers.FoodManager.Inst.GetFoodById$$String(foodRate.FoodId);
        if (null == food){
            ratesThatNeedRemove.Add(foodRate);
        }
        else if (food.isContainer){
            ratesThatNeedRemove.Add(foodRate);
        }
    }
    var $it19 = ratesThatNeedRemove.GetEnumerator();
    while ($it19.MoveNext()){
        var rateToRemove = $it19.get_Current();
        this.FoodRates.Remove(rateToRemove);
    }
};
$Inherit(FoodApp.Client.ngUsersSettingsModel, FoodApp.Common.ngModelBase);
function onTabChanged(day){
    FoodApp.Common.eventManager.inst.fire(FoodApp.Common.eventManager.dayChanged, day);
};
FoodApp.Client.ngFoodController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngFoodController.inst = new FoodApp.Client.ngFoodController();
FoodApp.Client.ngFoodController.prototype.get_className = function (){
    return "ngFoodController";
};
FoodApp.Client.ngFoodController.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.Client.ngFoodController.prototype.get_ngFoods = function (){
    return this._scope["ngFoods"];
};
FoodApp.Client.ngFoodController.prototype.set_ngFoods = function (value){
    this._scope["ngFoods"] = value;
};
FoodApp.Client.ngFoodController.prototype.get_ngCategories = function (){
    return this._scope["ngCategories"];
};
FoodApp.Client.ngFoodController.prototype.set_ngCategories = function (value){
    this._scope["ngCategories"] = value;
};
FoodApp.Client.ngFoodController.prototype.buyClick = function (day, foodId, value){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.FoodApi.Buy(day, foodId, value, $CreateAnonymousDelegate(this, function (res){
        FoodApp.Common.jsUtils.inst.hideLoading();
        FoodApp.Client.ngOrderController.inst.refreshOrders();
        if (!res){
            this.showErrorPopup();
        }
    }));
};
FoodApp.Client.ngFoodController.prototype.hasOrder = function (day, foodId){
    var res = false;
    var order = FoodApp.Client.ngOrderController.inst.getOrderByFoodId(day, foodId);
    if (null != order){
        res = true;
    }
    return res;
};
FoodApp.Client.ngFoodController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngFoods( []);
    this.set_ngCategories( []);
    this.get_ngCategories().push("Салати");
    this.get_ngCategories().push("Перші страви");
    this.get_ngCategories().push("Гарніри");
    this.get_ngCategories().push("Мясо/Риба");
    this.get_ngCategories().push("Комплексний");
    this.get_ngCategories().push("Хліб");
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.settingsLoaded, $CreateAnonymousDelegate(this, function (n){
        this.refreshFoods($CreateAnonymousDelegate(this, function (){
            var fn = window["initMenu"];
            fn.call();
        }));
    }));
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.orderListChanged, $CreateAnonymousDelegate(this, function (n){
        this._scope.$apply();
    }));
};
FoodApp.Client.ngFoodController.prototype.getPrefix = function (price){
    var res = price;
    if (res.indexOf(".") > 0){
        res = res.substr(0, res.indexOf("."));
    }
    return res;
};
FoodApp.Client.ngFoodController.prototype.getSuffix = function (price){
    var res = price;
    if (res.indexOf(".") > 0){
        res = res.substr(res.indexOf(".") + 1);
    }
    else {
        res = "";
    }
    return res;
};
FoodApp.Client.ngFoodController.prototype.refreshFoods = function (complete){
    FoodApp.Common.JsService.Inst.FoodApi.GetAllFoods($CreateAnonymousDelegate(this, function (data){
        this.set_ngFoods(data);
        this._scope.$apply();
        if (null != complete){
            complete();
        }
    }));
};
FoodApp.Client.ngFoodController.prototype.findFoodById = function (id){
    var res = null;
    for (var $i21 = 0,$t21 = this.get_ngFoods(),$l21 = $t21.length,dayItems = $t21[$i21]; $i21 < $l21; $i21++, dayItems = $t21[$i21]){
        for (var $i22 = 0,$l22 = dayItems.length,item = dayItems[$i22]; $i22 < $l22; $i22++, item = dayItems[$i22]){
            if (item.FoodId == id){
                res = item;
                break;
            }
        }
        if (null != res){
            break;
        }
    }
    return res;
};
FoodApp.Client.ngFoodController.prototype.getOrderCount = function (day, foodId){
    var res = 0;
    var order = FoodApp.Client.ngOrderController.inst.getOrderByFoodId(day, foodId);
    if (null != order){
        res = order.Count;
    }
    return res;
};
FoodApp.Client.ngFoodController.prototype.changePrice = function (day, ngFoodItem){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.FoodApi.ChangePrice(day, ngFoodItem.FoodId, ngFoodItem.Price, $CreateAnonymousDelegate(this, function (){
        FoodApp.Common.jsUtils.inst.hideLoading();
        this.refreshFoods($CreateAnonymousDelegate(this, function (){
        }));
    }));
};
$Inherit(FoodApp.Client.ngFoodController, FoodApp.Client.ngControllerBase);
FoodApp.Client.ngOrderController = function (){
    FoodApp.Client.ngControllerBase.call(this);
};
FoodApp.Client.ngOrderController.inst = new FoodApp.Client.ngOrderController();
FoodApp.Client.ngOrderController.prototype.get_className = function (){
    return "ngOrderController";
};
FoodApp.Client.ngOrderController.prototype.get_ngOrderEntries = function (){
    return this._scope["ngOrderEntries"];
};
FoodApp.Client.ngOrderController.prototype.set_ngOrderEntries = function (value){
    this._scope["ngOrderEntries"] = value;
};
FoodApp.Client.ngOrderController.prototype.getFoodItem = function (id){
    var item = FoodApp.Client.ngFoodController.inst.findFoodById(id);
    return item;
};
FoodApp.Client.ngOrderController.prototype.formatCount = function (order){
    var res = order.Count + "";
    var food = this.getFoodItem(order.FoodId);
    if (food.isByWeightItem){
        res = parseInt((order.Count * 100), 10) + "";
    }
    return res;
};
FoodApp.Client.ngOrderController.prototype.getTotalPrice = function (day){
    var res = 0;
    var ngOrderModels = this.get_ngOrderEntries()[day];
    if (ngOrderModels != null){
        for (var $i23 = 0,$l23 = ngOrderModels.length,item = ngOrderModels[$i23]; $i23 < $l23; $i23++, item = ngOrderModels[$i23]){
            var food = this.getFoodItem(item.FoodId);
            if (null != food){
                res += FoodApp.Common.jsUtils.inst.fixNumber(food.Price * item.Count);
                res = FoodApp.Common.jsUtils.inst.fixNumber(res);
            }
        }
    }
    res = FoodApp.Common.jsUtils.inst.fixNumber(res);
    return res;
};
FoodApp.Client.ngOrderController.prototype.init = function (scope, http, loc, filter){
    FoodApp.Client.ngControllerBase.prototype.init.call(this, scope, http, loc, filter);
    this.set_ngOrderEntries( []);
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.settingsLoaded, $CreateAnonymousDelegate(this, function (n){
        this.refreshOrders();
    }));
    FoodApp.Common.eventManager.inst.subscribe(FoodApp.Common.eventManager.orderCompleted, $CreateAnonymousDelegate(this, function (n){
        this.refreshOrders();
    }));
};
FoodApp.Client.ngOrderController.prototype.deleteOrder = function (day, foodId){
    FoodApp.Common.jsUtils.inst.showLoading();
    FoodApp.Common.JsService.Inst.OrderApi.DeleteOrder(day, foodId, $CreateAnonymousDelegate(this, function (res){
        FoodApp.Common.jsUtils.inst.hideLoading();
        this.refreshOrders();
        if (!res){
            this.showErrorPopup();
        }
    }));
};
FoodApp.Client.ngOrderController.prototype.refreshOrders = function (){
    FoodApp.Common.JsService.Inst.OrderApi.GetAllOrders(FoodApp.Common.JsService.Inst.OrderApi.getUserId(), $CreateAnonymousDelegate(this, function (data){
        var tmp = data;
        while (this.get_ngOrderEntries().length > 0){
            this.get_ngOrderEntries().pop();
        }
        for (var $i24 = 0,$l24 = tmp.length,obj = tmp[$i24]; $i24 < $l24; $i24++, obj = tmp[$i24]){
            this.get_ngOrderEntries().push(obj);
        }
        FoodApp.Common.eventManager.inst.fire(FoodApp.Common.eventManager.orderListChanged, this.get_ngOrderEntries());
        this._scope.$apply();
    }));
};
FoodApp.Client.ngOrderController.prototype.getOrders = function (day){
    return this.get_ngOrderEntries()[day];
};
FoodApp.Client.ngOrderController.prototype.getOrderByFoodId = function (day, foodId){
    var res = null;
    var orders = FoodApp.Client.ngOrderController.inst.getOrders(day);
    for (var $i25 = 0,$l25 = orders.length,order = orders[$i25]; $i25 < $l25; $i25++, order = orders[$i25]){
        if (order.FoodId == foodId){
            res = order;
            break;
        }
    }
    return res;
};
$Inherit(FoodApp.Client.ngOrderController, FoodApp.Client.ngControllerBase);
FoodApp.ngOrderFilter = function (){
};
FoodApp.ngOrderFilter.prototype.get_className = function (){
    return "ngOrderFilter";
};
FoodApp.ngOrderFilter.prototype.get_namespace = function (){
    return "FoodApp.Client";
};
FoodApp.ngOrderFilter.prototype.get_filterName = function (){
    return "orderFilter";
};
angularUtils.inst.registerFilterType(new FoodApp.ngOrderFilter());
FoodApp.ngOrderFilter.prototype.filter = function (obj, arg){
    var res =  [];
    var day = arg["day"];
    var allOrders = obj;
    var tmp = allOrders[day];
    if (tmp != null && tmp.length > 0){
        for (var $i26 = 0,$l26 = tmp.length,order = tmp[$i26]; $i26 < $l26; $i26++, order = tmp[$i26]){
            var foodItem = FoodApp.Client.ngFoodController.inst.findFoodById(order.FoodId);
            if (null != foodItem && !foodItem.isContainer){
                res.push(order);
            }
        }
    }
    return res;
};
if (typeof(FoodApp.Model) == "undefined")
    FoodApp.Model = {};
FoodApp.Model.ngMoneyModel = function (){
    this.UserId = null;
    this.Total = 0;
    this.MoneyOrders = null;
    this.MoneyOrders = new System.Collections.Generic.List$1.ctor("FoodApp.Model.ngMoneyOrderModel");
};
FoodApp.Model.ngMoneyModel.prototype.DeleteOrder = function (moneyOrder){
    this.MoneyOrders.Remove(moneyOrder);
};
$Inherit(FoodApp.Model.ngMoneyModel, FoodApp.Common.ngModelBase);
FoodApp.Model.ngMoneyOrderModel = function (){
    this.Operation = 0;
    this.Id = null;
    this.DateTime = System.DateTime.MinValue;
    this.Value = 0;
};
$Inherit(FoodApp.Model.ngMoneyOrderModel, FoodApp.Common.ngModelBase);
FoodApp.Model.ngMoneyLoggerModel = function (){
    this.UserId = null;
    this.DateTime = System.DateTime.MinValue;
    this.OrderId = null;
    this.Operation = 0;
    this.Value = 0;
};
$Inherit(FoodApp.Model.ngMoneyLoggerModel, FoodApp.Common.ngModelBase);

