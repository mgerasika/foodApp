/* Generated by SharpKit 5 v5.5.0 */

/* Generated by SharpKit 5 v5.5.0 */
if (typeof ($CreateAnonymousDelegate) == 'undefined') {
    var $CreateAnonymousDelegate = function (target, func) {
        if (target == null || func == null)
            return func;
        var delegate = function () {
            return func.apply(target, arguments);
        };
        delegate.func = func;
        delegate.target = target;
        delegate.isDelegate = true;
        return delegate;
    }
}


var angularUtils = function (){
    this._controllers =  [];
    this._directives =  [];
    this._filters =  [];
    this.module = null;
};
angularUtils.c_sModuleName = "StudyLogApiApp";
angularUtils.inst = new angularUtils();
angularUtils.prototype.registerControllerType = function (controller){
    this._controllers.push(controller);
};
angularUtils.prototype.registerDirectiveType = function (directive){
    this._directives.push(directive);
};
angularUtils.prototype.registerFilterType = function (filter){
    this._filters.push(filter);
};
angularUtils.prototype.linkControllerWithAngularJs = function (angularController){
    var func1 = new Function("$scope", "$http", "$location", "$filter", "var cstype = \'" + angularController.get_namespace() + "." + angularController.get_className() + "\';" + "angularUtils.inst.createController(cstype,$scope,$http,$location,$filter);");
    var str = "StudyLogApiApp.controller(\'" + angularController.get_className() + "\',func1);";
    eval(str);
};
angularUtils.prototype.createController = function (jstype, scope, http, loc, filter){
    var type = this.getJsType(jstype);
    var obj = null;
    if (type["inst"] != null){
        obj = type["inst"];
    }
    else {
        obj = this.createInstance(jstype);
    }
    var ctrl = obj;
    ctrl.init(scope, http, loc, filter);
};
angularUtils.prototype.getJsType = function (cstype){
    var arr = cstype.split(".");
    var res = window;
    for (var i = 0; i < arr.length; ++i){
        var key = arr[i];
        var tmpObj = res[key];
        res = tmpObj;
    }
    return res;
};
angularUtils.prototype.linkDirectiveWithAngularJs = function (directive){
    var module = window["StudyLogApiApp"];
    module.directive(directive.get_attrName(), $CreateAnonymousDelegate(this, function (){
        var obj = this.createInstance(directive.get_namespace() + "." + directive.get_className());
        obj.initDirectiveInternal();
        return obj;
    }));
};
angularUtils.prototype.linkFilterWithAngularJs = function (filter){
    var module = window["StudyLogApiApp"];
    module.filter(filter.get_filterName(), $CreateAnonymousDelegate(this, function (){
        var obj = this.createInstance(filter.get_namespace() + "." + filter.get_className());
        var fn = obj["filter"];
        return fn;
    }));
};
angularUtils.prototype.createInstance = function (cstype){
    var obj = "var obj = new " + cstype + "()";
    try{
        eval(obj);
    }
    catch(ex){
        obj = null;
    }
    return obj;
};
angularUtils.prototype.before = function (){
    this.module = angular.module("StudyLogApiApp",  []);
    window["StudyLogApiApp"] = this.module;
};
angularUtils.prototype.after = function (){
    for (var i = 0; i < this._controllers.length; ++i){
        this.linkControllerWithAngularJs(this._controllers[i]);
    }
    for (var i = 0; i < this._directives.length; ++i){
        this.linkDirectiveWithAngularJs(this._directives[i]);
    }
    for (var i = 0; i < this._filters.length; ++i){
        this.linkFilterWithAngularJs(this._filters[i]);
    }
    angularUtils.addFilter();
};
angularUtils.addFilter = function (){
    eval("StudyLogApiApp.filter(\'rawHtml\', [\'$sce\', function($sce){return function(val) {return $sce.trustAsHtml(val);};}]);");
};
if (typeof(angularjs) == "undefined")
    var angularjs = {};
angularjs.ProgramBefore = function (){
};
angularUtils.inst.before();
angularjs.angularController = function (){
    this._scope = null;
    this._http = null;
    this._location = null;
    this.Filter = null;
    angularUtils.inst.registerControllerType(this);
};
angularjs.angularController.prototype.get__model = function (){
    var scope = this._scope instanceof Object ? this._scope : null;
    var obj = scope["model"];
    return obj;
};
angularjs.angularController.prototype.set__model = function (value){
    var scope = this._scope instanceof Object ? this._scope : null;
    scope["model"] = value;
};
angularjs.angularController.prototype.init = function (scope, http, loc, filter){
    this._scope = scope;
    this._http = http;
    this._location = loc;
    this.Filter = filter;
    var copy = this;
    for (var key in copy){
        scope[key] = copy[key];
    }
};
angularjs.angularDirective = function (){
    this._attrs = null;
    this._element = null;
    this._scope = null;
};
angularjs.angularDirective.prototype.get_restrict = function (){
    return "A";
};
angularjs.angularDirective.prototype.get_getScope = function (){
    return true;
};
angularjs.angularDirective.prototype.get_attrName = function (){
    var res;
    if (this.get_className() != null){
        res = this.get_className().toLowerCase();
    }
    else {
        res = this.get_className().toLowerCase();
    }
    return res;
};
angularjs.angularDirective.prototype.template = function (element, attrs){
    var res = $("#" + this.getTemplateId()).html();
    return res;
};
angularjs.angularDirective.prototype.getTemplateId = function (){
    return "_id" + this.get_className();
};
angularjs.angularDirective.prototype.initDirectiveInternal = function (){
    var self = this;
    self["restrict"] = this.get_restrict();
    self["scope"] = this.get_getScope();
};
angularjs.angularDirective.prototype.init = function (s, element, attrs){
    this._scope = s;
    this._element = element;
    this._attrs = attrs;
};
angularjs.angularDirective.prototype.link = function (s, element, attrs){
    var cstype = attrs["cstype"];
    var obj = angularUtils.inst.createInstance(cstype);
    obj.init(s, element, attrs);
};


/* Generated by SharpKit 5 v5.5.0 */
if (typeof ($Inherit) == 'undefined') {
	var $Inherit = function (ce, ce2) {

		if (typeof (Object.getOwnPropertyNames) == 'undefined') {

			for (var p in ce2.prototype)
				if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p])
					ce.prototype[p] = ce2.prototype[p];
			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		} else {

			var props = Object.getOwnPropertyNames(ce2.prototype);
			for (var i = 0; i < props.length; i++)
				if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined')
					Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));

			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		}

	}
};

if (typeof ($CreateAnonymousDelegate) == 'undefined') {
    var $CreateAnonymousDelegate = function (target, func) {
        if (target == null || func == null)
            return func;
        var delegate = function () {
            return func.apply(target, arguments);
        };
        delegate.func = func;
        delegate.target = target;
        delegate.isDelegate = true;
        return delegate;
    }
}


if (typeof(FoodApp) == "undefined")
    var FoodApp = {};
if (typeof(FoodApp.Common) == "undefined")
    FoodApp.Common = {};
if (typeof(FoodApp.Common.Model) == "undefined")
    FoodApp.Common.Model = {};
FoodApp.Common.Model.ngModelBase = function (){
};
FoodApp.Common.Model.ngFoodItem = function (){
    this.Name = null;
    this.Description = null;
    this.Category = null;
    this.Price = 0;
    this.FoodId = null;
    this.IsByWeightItem = false;
    this.isContainer = false;
    this.isSmallContainer = false;
    this.isBigContainer = false;
    this.isSalat = false;
    this.isGarnir = false;
    this.isMeatOrFish = false;
    this.isFirst = false;
    this.isKvasolevaOrChanachi = false;
};
$Inherit(FoodApp.Common.Model.ngFoodItem, FoodApp.Common.Model.ngModelBase);
FoodApp.Common.Model.ngFoodRate = function (){
    this.FoodId = null;
    this.Rate = 0;
};
$Inherit(FoodApp.Common.Model.ngFoodRate, FoodApp.Common.Model.ngModelBase);
FoodApp.Common.Model.ngHistoryEntry = function (){
    this.FoodId = null;
    this.Date = System.DateTime.MinValue;
    this.Count = 0;
    this.FoodPrice = 0;
};
$Inherit(FoodApp.Common.Model.ngHistoryEntry, FoodApp.Common.Model.ngModelBase);
FoodApp.Common.Model.ngHistoryGroupEntry = function (){
    this.DateStr = null;
    this.Entries = null;
    this.Entries = new System.Collections.Generic.List$1.ctor("FoodApp.Common.Model.ngHistoryEntry");
};
$Inherit(FoodApp.Common.Model.ngHistoryGroupEntry, FoodApp.Common.Model.ngModelBase);
FoodApp.Common.Model.ngOrderEntry = function (){
    this.FoodId = null;
    this.Count = 0;
    this.FoodPrice = 0;
};
$Inherit(FoodApp.Common.Model.ngOrderEntry, FoodApp.Common.Model.ngModelBase);
FoodApp.Common.Model.ngUserModel = function (){
    this.Column = 0;
    this.Email = null;
    this.Name = null;
    this.Id = null;
    this.Picture = null;
    this.GoogleName = null;
    this.IsAdmin = false;
    this.GoogleFirstName = null;
};
$Inherit(FoodApp.Common.Model.ngUserModel, FoodApp.Common.Model.ngModelBase);
if (typeof(FoodApp.Common.Url) == "undefined")
    FoodApp.Common.Url = {};
FoodApp.Common.Url.UrlBase = function (){
};
FoodApp.Common.Url.UrlBase.prototype.FormatUrl = function (str, tmpArgs){
    if (FoodApp.Common.Url.UrlBase.IsJavaScriptExecute()){
        var lArguments = arguments;
        var len = lArguments.length;
        var regExp = new RegExp("{\\w+}");
        for (var i = 1; i < len; ++i){
            var arg = lArguments[i];
            str = str.replace(regExp, arg);
        }
    }
    else {
        str = FoodApp.Common.Url.UrlBase.FormatUrlInternal(str, tmpArgs);
    }
    return str;
};
FoodApp.Common.Url.UrlBase.IsJavaScriptExecute = function (){
    return window != null && window.location != null && window.location.href != null;
};
FoodApp.Common.Url.FoodsUrl = function (){
    FoodApp.Common.Url.UrlBase.call(this);
};
FoodApp.Common.Url.FoodsUrl.Inst = new FoodApp.Common.Url.FoodsUrl();
FoodApp.Common.Url.FoodsUrl.c_sFoodsPrefix = "api/foods";
FoodApp.Common.Url.FoodsUrl.c_sGetFoodsByDay = "api/foods/{userId}/{day}/";
FoodApp.Common.Url.FoodsUrl.c_sBuy = "api/foods/{userId}/{day}/{foodId}/{val}/";
FoodApp.Common.Url.FoodsUrl.c_sChangePricePrefix = "api/foods/changeprice/";
FoodApp.Common.Url.FoodsUrl.c_sChangePrice = "api/foods/changeprice/{userId}/{day}/{foodId}/{val}/";
FoodApp.Common.Url.FoodsUrl.prototype.GetFoodsByDayUrl = function (userId, day){
    var res = this.FormatUrl("api/foods/{userId}/{day}/", userId, day);
    return res;
};
$Inherit(FoodApp.Common.Url.FoodsUrl, FoodApp.Common.Url.UrlBase);
FoodApp.Common.Url.HistoryUrl = function (){
    FoodApp.Common.Url.UrlBase.call(this);
};
FoodApp.Common.Url.HistoryUrl.c_sHistoryPrefix = "api/history";
FoodApp.Common.Url.HistoryUrl.c_sGetHistory = "api/history/{userId}/";
FoodApp.Common.Url.HistoryUrl.c_sDeleteHistoryPrefix = "api/history/delete";
FoodApp.Common.Url.HistoryUrl.c_sDeleteHistory = "api/history/delete/{userId}/";
$Inherit(FoodApp.Common.Url.HistoryUrl, FoodApp.Common.Url.UrlBase);
FoodApp.Common.Url.JsApiBase = function (serverUrl, userId){
    this._userId = null;
    this._serverUrl = null;
    this._serverUrl = serverUrl;
    this._userId = userId;
};
FoodApp.Common.Url.JsApiBase.prototype.Deserealize = function (obj){
    var res = obj;
    if (FoodApp.Common.Url.jsCommonUtils.inst.IsArray(obj)){
        FoodApp.Common.Url.jsCommonUtils.inst.Assert(null != res);
    }
    else {
        FoodApp.Common.Url.jsCommonUtils.inst.Assert(null != res);
    }
    return res;
};
FoodApp.Common.Url.JsApiBase.prototype.GetPrefixFromArray = function (args){
    var prefix = null;
    for (var $i2 = 0,$l2 = args.length,arg = args[$i2]; $i2 < $l2; $i2++, arg = args[$i2]){
        prefix = this.GetPrefixFromObject(arg);
    }
    return prefix;
};
FoodApp.Common.Url.JsApiBase.prototype.GetPrefixFromObject = function (arg){
    var prefix = null;
    for (var prop in arg){
        if (FoodApp.Common.Url.jsCommonUtils.inst.HasPrefix(prop)){
            prefix = FoodApp.Common.Url.jsCommonUtils.inst.GetPrefix(prop);
            break;
        }
    }
    return prefix;
};
FoodApp.Common.Url.JsApiBase.prototype.SendGet = function (url, handler, args){
    var serverUrl = this._serverUrl;
    url = FoodApp.Common.Url.jsCommonUtils.inst.appendQueryToUrl(serverUrl + url, "time=" + new Date().getTime());
    var headers = new Object();
    $.ajax({
        type: "GET",
        dataType: "json",
        url: url,
        async: true,
        headers: headers,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            handler(o);
        }),
        error: $CreateAnonymousDelegate(this, function (xhr, s, arg3){
            alert(arg3);
        })
    });
};
FoodApp.Common.Url.jsCommonUtils = function (){
    this._location = null;
};
FoodApp.Common.Url.jsCommonUtils.inst = new FoodApp.Common.Url.jsCommonUtils();
FoodApp.Common.Url.jsCommonUtils.prototype.Equals = function (prefix, prefix2){
    var res = prefix.toLowerCase() == prefix2.toLowerCase();
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.Assert = function (p1){
    this.Assert(p1, "");
};
FoodApp.Common.Url.jsCommonUtils.prototype.Assert = function (p1, msg){
    if (!p1){
        if (msg == null){
            msg = "";
        }
        if (confirm(msg + "Debug?")){
            debugger;
        }
    }
};
FoodApp.Common.Url.jsCommonUtils.prototype.isEmpty = function (prefix){
    var res = prefix == null || prefix == "" && prefix == undefined || prefix == 0;
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.GetPrefix = function (prop){
    var prefix = "";
    var idx = prop.indexOf(".");
    if (-1 != idx){
        prefix = prop.substr(0, idx + 1);
    }
    return prefix;
};
FoodApp.Common.Url.jsCommonUtils.prototype.HasPrefix = function (prop){
    var res = false;
    var idx = prop.indexOf(".");
    if (-1 != idx){
        res = true;
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.IsArray = function (obj){
    var res = false;
    var arr = obj;
    if (null != arr && arr["pop"] != null){
        res = true;
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.appendQueryToUrl = function (url, queryStr){
    var res = url;
    if (queryStr != ""){
        if (url.indexOf("?") == -1){
            res = url + "?" + queryStr;
        }
        else {
            res = url + "&" + queryStr;
        }
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.isEmpty = function (str){
    return (null == str) || (undefined == str) || ("" == str) || ("null" == str);
};
FoodApp.Common.Url.jsCommonUtils.prototype.toBool = function (jsString){
    var res = false;
    if (!FoodApp.Common.Url.jsCommonUtils.inst.isEmpty(jsString)){
        if (jsString == "true" || jsString == 1 || jsString){
            res = true;
        }
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.contains = function (prefixes, prefix){
    var res = false;
    for (var $i3 = 0,$l3 = prefixes.length,pr = prefixes[$i3]; $i3 < $l3; $i3++, pr = prefixes[$i3]){
        if (pr == prefix){
            res = true;
            break;
        }
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.getQueryParam = function (jsString, p){
    var res = "";
    var idx = jsString.indexOf("?");
    if (idx > 0){
        var tmp = jsString.substr(idx + 1);
        var args = tmp.split("&");
        if (args.length == 0){
            args.push(tmp);
        }
        for (var $i4 = 0,$l4 = args.length,arg = args[$i4]; $i4 < $l4; $i4++, arg = args[$i4]){
            var keyVal = arg.split("=");
            if (keyVal.length == 2){
                if (keyVal[0] == p){
                    res = keyVal[1];
                    break;
                }
            }
        }
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.getLocation = function (){
    var res = this._location;
    if (FoodApp.Common.Url.jsCommonUtils.inst.isEmpty(this._location)){
        res = document.location.protocol + "//" + document.location.host + "/";
    }
    return res;
};
FoodApp.Common.Url.jsCommonUtils.prototype.getPrefix = function (tmp){
    var idx = tmp.indexOf(".");
    var prefix = tmp.substr(0, idx + 1);
    return prefix;
};
FoodApp.Common.Url.jsCommonUtils.prototype.removeFromArray = function (items, obj){
    var tmpArray =  [];
    for (var $i5 = 0,$l5 = items.length,tmp = items[$i5]; $i5 < $l5; $i5++, tmp = items[$i5]){
        if (tmp != obj){
            tmpArray.push(tmp);
        }
    }
    while (items.length > 0){
        items.pop();
    }
    for (var $i6 = 0,$l6 = tmpArray.length,tmp = tmpArray[$i6]; $i6 < $l6; $i6++, tmp = tmpArray[$i6]){
        items.push(tmp);
    }
};
FoodApp.Common.Url.JsService = function (){
    this.FoodApi = null;
};
FoodApp.Common.Url.JsService.Inst = new FoodApp.Common.Url.JsService();
FoodApp.Common.Url.JsService.prototype.Init = function (serverUrl, userId){
    this.FoodApi = new FoodApp.Common.Url.JsFoodApi(serverUrl, userId);
};
FoodApp.Common.Url.JsFoodApi = function (serverUrl, userId){
    FoodApp.Common.Url.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.Url.JsFoodApi.prototype.GetFoods = function (day, handler){
    var url = FoodApp.Common.Url.FoodsUrl.Inst.GetFoodsByDayUrl(this._userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.Url.jsCommonUtils.inst.Assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
$Inherit(FoodApp.Common.Url.JsFoodApi, FoodApp.Common.Url.JsApiBase);
FoodApp.Common.Url.OrderUrl = function (){
    FoodApp.Common.Url.UrlBase.call(this);
};
FoodApp.Common.Url.OrderUrl.c_sOrdersPrefix = "api/orders";
FoodApp.Common.Url.OrderUrl.c_sGetAllOrders = "api/orders/{userId}/";
FoodApp.Common.Url.OrderUrl.c_sGetOrders = "api/orders/{userId}/{day}";
FoodApp.Common.Url.OrderUrl.c_sDeleteOrder = "api/orders/{userId}/{day}/{foodId}/";
$Inherit(FoodApp.Common.Url.OrderUrl, FoodApp.Common.Url.UrlBase);
FoodApp.Common.Url.PropousalUrl = function (){
};
FoodApp.Common.Url.PropousalUrl.c_sGetPropousal = "api/propousal";
FoodApp.Common.Url.PropousalUrl.c_sGetPropousalByDay = "api/propousal/{userId}/{dayOfWeek}/";
FoodApp.Common.Url.PropousalUrl.c_sGetPropousals = "api/propousal/{userId}/";
FoodApp.Common.Url.PropousalUrl.c_sBuy = "api/propousal/{userId}/{dayOfWeek}/";


/* Generated by SharpKit 5 v5.5.0 */

if (typeof(angularjs) == "undefined")
    var angularjs = {};
angularjs.ProgramAfter = function (){
};
angularUtils.inst.after();


function Main(){
    window.onerror = function (evt){
        alert("error:" + evt);
    };
    var userId = "47258346-5281-4fd7-9234-d5eb994c534c";
    FoodApp.Common.Url.JsService.Inst.Init("http://www.gam-gam.lviv.ua/", userId);
    FoodApp.Common.Url.JsService.Inst.FoodApi.GetFoods(0, function (data){
        alert(data.length);
    });
};
var isSharp = -1 != window.location.href.indexOf("cshtml");
if (isSharp){
    Main();
}

