/* Generated by SharpKit 5 v5.5.0 */
if (typeof ($Inherit) == 'undefined') {
	var $Inherit = function (ce, ce2) {

		if (typeof (Object.getOwnPropertyNames) == 'undefined') {

			for (var p in ce2.prototype)
				if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p])
					ce.prototype[p] = ce2.prototype[p];
			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		} else {

			var props = Object.getOwnPropertyNames(ce2.prototype);
			for (var i = 0; i < props.length; i++)
				if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined')
					Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));

			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		}

	}
};

if (typeof ($CreateAnonymousDelegate) == 'undefined') {
    var $CreateAnonymousDelegate = function (target, func) {
        if (target == null || func == null)
            return func;
        var delegate = function () {
            return func.apply(target, arguments);
        };
        delegate.func = func;
        delegate.target = target;
        delegate.isDelegate = true;
        return delegate;
    }
}


if (typeof(FoodApp) == "undefined")
    var FoodApp = {};
if (typeof(FoodApp.Common) == "undefined")
    FoodApp.Common = {};
FoodApp.Common.JsApiBase = function (serverUrl, userId){
    this._userId = null;
    this._serverUrl = null;
    this._serverUrl = serverUrl;
    this._userId = userId;
};
FoodApp.Common.JsApiBase.prototype.getUserId = function (){
    return this._userId;
};
FoodApp.Common.JsApiBase.prototype.Deserealize = function (obj){
    var res = obj;
    if (FoodApp.Common.jsCommonUtils.inst.IsArray(obj)){
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
    }
    else {
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
    }
    return res;
};
FoodApp.Common.JsApiBase.prototype.GetPrefixFromArray = function (args){
    var prefix = null;
    for (var $i2 = 0,$l2 = args.length,arg = args[$i2]; $i2 < $l2; $i2++, arg = args[$i2]){
        prefix = this.GetPrefixFromObject(arg);
    }
    return prefix;
};
FoodApp.Common.JsApiBase.prototype.GetPrefixFromObject = function (arg){
    var prefix = null;
    for (var prop in arg){
        if (FoodApp.Common.jsCommonUtils.inst.HasPrefix(prop)){
            prefix = FoodApp.Common.jsCommonUtils.inst.GetPrefix(prop);
            break;
        }
    }
    return prefix;
};
FoodApp.Common.JsApiBase.prototype.SendGet = function (url, handler, args){
    var serverUrl = this._serverUrl;
    url = FoodApp.Common.jsCommonUtils.inst.appendQueryToUrl(serverUrl + url, "time=" + new Date().getTime());
    var headers = new Object();
    $.ajax({
        type: "GET",
        dataType: "json",
        url: url,
        async: true,
        headers: headers,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            handler(o);
        }),
        error: $CreateAnonymousDelegate(this, function (xhr, s, arg3){
            alert(arg3);
        })
    });
};
FoodApp.Common.JsApiBase.prototype.SendPost = function (url, data, handler){
    this.SendInternal("post", url, data, handler);
};
FoodApp.Common.JsApiBase.prototype.SendDelete = function (url, handler){
    this.SendInternal("delete", url, null, handler);
};
FoodApp.Common.JsApiBase.prototype.SendInternal = function (httpMethod, url, data, handler){
    var serverUrl = this._serverUrl;
    url = FoodApp.Common.jsCommonUtils.inst.appendQueryToUrl(serverUrl + url, "time=" + new Date().getTime());
    var headers = new Object();
    var ajaxSettings = {
        type: httpMethod,
        dataType: "json",
        data: data,
        url: url,
        headers: headers,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            handler(o);
        }),
        error: $CreateAnonymousDelegate(this, function (xhr, s, arg3){
            alert(arg3);
        })
    };
    $.ajax(ajaxSettings);
};
FoodApp.Common.JsToolsApi = function (serverUrl, userId){
    FoodApp.Common.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.JsToolsApi.prototype.ClearTodayOrders = function (handler){
    var url = FoodApp.Common.ToolsUrl.Inst.GetClearTodayOrdersUrl();
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
$Inherit(FoodApp.Common.JsToolsApi, FoodApp.Common.JsApiBase);
FoodApp.Common.JsUsersApi = function (serverUrl, userId){
    FoodApp.Common.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.JsUsersApi.prototype.GetUsers = function (handler){
    var url = FoodApp.Common.UsersUrl.Inst.GetUsers();
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
$Inherit(FoodApp.Common.JsUsersApi, FoodApp.Common.JsApiBase);
FoodApp.Common.jsUtils = function (){
};
FoodApp.Common.jsUtils.inst = new FoodApp.Common.jsUtils();
FoodApp.Common.jsUtils.prototype.getLocation = function (){
    var name = document.location.protocol + "//" + document.location.host;
    return name;
};
FoodApp.Common.jsUtils.prototype.showLoading = function (){
    var loadingEl = document.getElementById("loadingDiv") instanceof HTMLElement ? document.getElementById("loadingDiv") : null;
    loadingEl.style.display = "block";
};
FoodApp.Common.jsUtils.prototype.hideLoading = function (){
    window.setTimeout($CreateAnonymousDelegate(this, function (){
        var loadingEl = document.getElementById("loadingDiv") instanceof HTMLElement ? document.getElementById("loadingDiv") : null;
        loadingEl.style.display = "none";
    }), 200);
};
FoodApp.Common.jsUtils.prototype.getSelectedText = function (wnd){
    var text = "";
    if (wnd["getSelection"] != null){
        text = wnd.getSelection().toString();
    }
    else {
        var selection = wnd.document["selection"];
        if (selection != null && (selection["type"] != "Control")){
            var fn = selection["createRange"];
            text = fn.call()["text"];
        }
    }
    return text;
};
FoodApp.Common.jsUtils.prototype.isEmpty = function (str){
    return (null == str) || (undefined == str) || ("" == str) || ("null" == str);
};
FoodApp.Common.jsUtils.prototype.Contains = function (ngCategories, p){
    var res = false;
    for (var $i3 = 0,$l3 = ngCategories.length,str = ngCategories[$i3]; $i3 < $l3; $i3++, str = ngCategories[$i3]){
        if (str == p){
            res = true;
            break;
        }
    }
    return res;
};
FoodApp.Common.jsUtils.prototype.fixNumber = function (p){
    var jsNumber = parseFloat(p);
    var tmp = jsNumber.toPrecision(5);
    return parseFloat(tmp);
};
FoodApp.Common.jsUtils.prototype.addRange = function (source, target){
    for (var $i4 = 0,$l4 = target.length,other = target[$i4]; $i4 < $l4; $i4++, other = target[$i4]){
        source.push(other);
    }
};
FoodApp.Common.eventManager = function (){
    this._dict = new Object();
};
FoodApp.Common.eventManager.settingsLoaded = "settingsLoaded";
FoodApp.Common.eventManager.deviceReady = "deviceReady";
FoodApp.Common.eventManager.orderCompleted = "orderCompleted";
FoodApp.Common.eventManager.orderListChanged = "orderListChanged";
FoodApp.Common.eventManager.dayChanged = "dayChanged";
FoodApp.Common.eventManager.inst = new FoodApp.Common.eventManager();
FoodApp.Common.eventManager.prototype.GetHandlersByName = function (name){
    if (this._dict[name] == null){
        this._dict[name] =  [];
    }
    return this._dict[name];
};
FoodApp.Common.eventManager.prototype.subscribe = function (eventName, action){
    var array = this.GetHandlersByName(eventName);
    array.push(action);
};
FoodApp.Common.eventManager.prototype.fire = function (name, arg){
    var array = this.GetHandlersByName(name);
    for (var $i5 = 0,$l5 = array.length,obj = array[$i5]; $i5 < $l5; $i5++, obj = array[$i5]){
        var action = obj;
        action(arg);
    }
};
FoodApp.Common.ngModelBase = function (){
};
FoodApp.Common.ngFoodItem = function (){
    this.Name = null;
    this.Description = null;
    this.Category = null;
    this.Price = 0;
    this.FoodId = null;
    this.isByWeightItem = false;
    this.isContainer = false;
    this.isSmallContainer = false;
    this.isBigContainer = false;
    this.isSalat = false;
    this.isGarnir = false;
    this.isMeatOrFish = false;
    this.isFirst = false;
    this.isKvasolevaOrChanachi = false;
};
FoodApp.Common.ngFoodItem.prototype.toString = function (){
    return this.FoodId;
};
$Inherit(FoodApp.Common.ngFoodItem, FoodApp.Common.ngModelBase);
FoodApp.Common.ngFoodRate = function (){
    this.FoodId = null;
    this.Rate = 0;
};
$Inherit(FoodApp.Common.ngFoodRate, FoodApp.Common.ngModelBase);
FoodApp.Common.ngHistoryEntry = function (){
    this.FoodId = null;
    this.Date = System.DateTime.MinValue;
    this.Count = 0;
    this.FoodPrice = 0;
};
$Inherit(FoodApp.Common.ngHistoryEntry, FoodApp.Common.ngModelBase);
FoodApp.Common.ngHistoryGroupEntry = function (){
    this.DateStr = null;
    this.Entries = null;
    this.Entries = new System.Collections.Generic.List$1.ctor("FoodApp.Common.ngHistoryEntry");
};
$Inherit(FoodApp.Common.ngHistoryGroupEntry, FoodApp.Common.ngModelBase);
FoodApp.Common.ngOrderEntry = function (){
    this.FoodId = null;
    this.Count = 0;
    this.FoodPrice = 0;
};
$Inherit(FoodApp.Common.ngOrderEntry, FoodApp.Common.ngModelBase);
FoodApp.Common.ngUserModel = function (){
    this.Column = 0;
    this.Email = null;
    this.Name = null;
    this.Id = null;
    this.Picture = null;
    this.GoogleName = null;
    this.IsAdmin = false;
    this.GoogleFirstName = null;
    this.IsReviewer = false;
};
$Inherit(FoodApp.Common.ngUserModel, FoodApp.Common.ngModelBase);
FoodApp.Common.ngFoodFilter = function (){
};
FoodApp.Common.ngFoodFilter.prototype.get_className = function (){
    return "ngFoodFilter";
};
FoodApp.Common.ngFoodFilter.prototype.get_namespace = function (){
    return "FoodApp.Common";
};
FoodApp.Common.ngFoodFilter.prototype.get_filterName = function (){
    return "foodFilter";
};
angularUtils.inst.registerFilterType(new FoodApp.Common.ngFoodFilter());
FoodApp.Common.ngFoodFilter.prototype.filter = function (obj, arg){
    var res =  [];
    var category = arg["category"];
    var day = arg["day"];
    var allFoods = obj;
    var items = allFoods[day];
    if (null != items){
        for (var $i6 = 0,$l6 = items.length,item = items[$i6]; $i6 < $l6; $i6++, item = items[$i6]){
            if ((item.Category == category) && !item.isContainer){
                res.push(item);
            }
        }
    }
    return res;
};
FoodApp.Common.ajaxHlp = function (){
};
FoodApp.Common.ajaxHlp.inst = new FoodApp.Common.ajaxHlp();
FoodApp.Common.ajaxHlp.prototype.SendGet = function (type, url, success, failed){
    url = FoodApp.Common.ajaxHlp.addTimeToUrl(url);
    var headers = new Object();
    $.ajax({
        type: "GET",
        dataType: type,
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/" + url,
        headers: headers,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            success(o, s, arg3);
        }),
        error: $CreateAnonymousDelegate(this, function (xhr, s, arg3){
            failed(arg3, s, xhr);
        })
    });
};
FoodApp.Common.ajaxHlp.prototype.SendPost = function (dataType, url, data, success, failed){
    this.SendInternal("post", dataType, url, data, success, failed);
};
FoodApp.Common.ajaxHlp.prototype.SendPut = function (dataType, url, data, success, failed){
    this.SendInternal("put", dataType, url, data, success, failed);
};
FoodApp.Common.ajaxHlp.prototype.SendDelete = function (dataType, url, data, success, failed){
    this.SendInternal("delete", dataType, url, data, success, failed);
};
FoodApp.Common.ajaxHlp.prototype.SendInternal = function (httpMethod, type, url, data, success, failed){
    url = FoodApp.Common.ajaxHlp.addTimeToUrl(url);
    var headers = new Object();
    var ajaxSettings = {
        type: httpMethod,
        dataType: type,
        data: data,
        url: FoodApp.Common.jsUtils.inst.getLocation() + "/" + url,
        headers: headers,
        success: $CreateAnonymousDelegate(this, function (o, s, arg3){
            success(o, s, arg3);
        }),
        error: $CreateAnonymousDelegate(this, function (xhr, s, arg3){
            failed(arg3, s, xhr);
        })
    };
    var isString = data["toLowerCase"] != null;
    if (isString){
        ajaxSettings.processData = true;
        ajaxSettings.contentType = (type.toLowerCase() == "xml") ? "application/xml" : "application/json";
    }
    $.ajax(ajaxSettings);
};
FoodApp.Common.ajaxHlp.addTimeToUrl = function (url){
    if (-1 == url.indexOf("?")){
        url += "?time=" + (new Date()).getTime();
    }
    else {
        url += "&time=" + (new Date()).getTime();
    }
    return url;
};
FoodApp.Common.UrlBase = function (){
};
FoodApp.Common.UrlBase.prototype.FormatUrl = function (str, tmpArgs){
    if (FoodApp.Common.UrlBase.IsJavaScriptExecute()){
        var lArguments = arguments;
        var len = lArguments.length;
        var regExp = new RegExp("{\\w+}");
        for (var i = 1; i < len; ++i){
            var arg = lArguments[i];
            str = str.replace(regExp, arg);
        }
    }
    else {
        str = FoodApp.Common.UrlBase.FormatUrlInternal(str, tmpArgs);
    }
    return str;
};
FoodApp.Common.UrlBase.IsJavaScriptExecute = function (){
    return window != null && window.location != null && window.location.href != null;
};
FoodApp.Common.FoodsUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.FoodsUrl.c_sFoodsPrefix = "api/foods";
FoodApp.Common.FoodsUrl.c_sAllFoods = "api/foods/";
FoodApp.Common.FoodsUrl.c_sGetFoodsByDay = "api/foods/{userId}/{day}/";
FoodApp.Common.FoodsUrl.c_sBuy = "api/foods/{userId}/{day}/{foodId}/{val}/";
FoodApp.Common.FoodsUrl.c_sChangePricePrefix = "api/foods/changeprice/";
FoodApp.Common.FoodsUrl.c_sChangePrice = "api/foods/changeprice/{userId}/{day}/{foodId}/{val}/";
FoodApp.Common.FoodsUrl.Inst = new FoodApp.Common.FoodsUrl();
FoodApp.Common.FoodsUrl.prototype.GetFoodsByDayUrl = function (userId, day){
    var res = this.FormatUrl("api/foods/{userId}/{day}/", userId, day);
    return res;
};
FoodApp.Common.FoodsUrl.prototype.GetAllFoodsUrl = function (userId){
    var res = this.FormatUrl("api/foods/", userId);
    return res;
};
FoodApp.Common.FoodsUrl.prototype.GetBuyUrl = function (userId, day, foodId, value){
    var res = this.FormatUrl("api/foods/{userId}/{day}/{foodId}/{val}/", userId, day, foodId, value);
    return res;
};
FoodApp.Common.FoodsUrl.prototype.GetChangePriceUrl = function (userId, day, foodId, value){
    var res = this.FormatUrl("api/foods/changeprice/{userId}/{day}/{foodId}/{val}/", userId, day, foodId, value);
    return res;
};
$Inherit(FoodApp.Common.FoodsUrl, FoodApp.Common.UrlBase);
FoodApp.Common.HistoryUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.HistoryUrl.c_sHistoryPrefix = "api/history";
FoodApp.Common.HistoryUrl.c_sGetHistory = "api/history/{userId}/";
FoodApp.Common.HistoryUrl.c_sDeleteHistoryPrefix = "api/history/delete";
FoodApp.Common.HistoryUrl.c_sDeleteHistory = "api/history/delete/{userId}/";
$Inherit(FoodApp.Common.HistoryUrl, FoodApp.Common.UrlBase);
FoodApp.Common.jsCommonUtils = function (){
    this._location = null;
};
FoodApp.Common.jsCommonUtils.inst = new FoodApp.Common.jsCommonUtils();
FoodApp.Common.jsCommonUtils.prototype.Equals = function (prefix, prefix2){
    var res = prefix.toLowerCase() == prefix2.toLowerCase();
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.assert = function (p1){
    this.assert(p1, "");
};
FoodApp.Common.jsCommonUtils.prototype.assert = function (p1, msg){
    if (!p1){
        if (msg == null){
            msg = "";
        }
        if (confirm(msg + "Debug?")){
            debugger;
        }
    }
};
FoodApp.Common.jsCommonUtils.prototype.isEmpty = function (prefix){
    var res = prefix == null || prefix == "" && prefix == undefined || prefix == 0;
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.GetPrefix = function (prop){
    var prefix = "";
    var idx = prop.indexOf(".");
    if (-1 != idx){
        prefix = prop.substr(0, idx + 1);
    }
    return prefix;
};
FoodApp.Common.jsCommonUtils.prototype.HasPrefix = function (prop){
    var res = false;
    var idx = prop.indexOf(".");
    if (-1 != idx){
        res = true;
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.IsArray = function (obj){
    var res = false;
    var arr = obj;
    if (null != arr && arr["pop"] != null){
        res = true;
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.appendQueryToUrl = function (url, queryStr){
    var res = url;
    if (queryStr != ""){
        if (url.indexOf("?") == -1){
            res = url + "?" + queryStr;
        }
        else {
            res = url + "&" + queryStr;
        }
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.isEmpty = function (str){
    return (null == str) || (undefined == str) || ("" == str) || ("null" == str);
};
FoodApp.Common.jsCommonUtils.prototype.toBool = function (jsString){
    var res = false;
    if (!FoodApp.Common.jsCommonUtils.inst.isEmpty(jsString)){
        if (jsString == "true" || jsString == 1 || jsString){
            res = true;
        }
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.contains = function (prefixes, prefix){
    var res = false;
    for (var $i7 = 0,$l7 = prefixes.length,pr = prefixes[$i7]; $i7 < $l7; $i7++, pr = prefixes[$i7]){
        if (pr == prefix){
            res = true;
            break;
        }
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.getQueryParam = function (jsString, p){
    var res = "";
    var idx = jsString.indexOf("?");
    if (idx > 0){
        var tmp = jsString.substr(idx + 1);
        var args = tmp.split("&");
        if (args.length == 0){
            args.push(tmp);
        }
        for (var $i8 = 0,$l8 = args.length,arg = args[$i8]; $i8 < $l8; $i8++, arg = args[$i8]){
            var keyVal = arg.split("=");
            if (keyVal.length == 2){
                if (keyVal[0] == p){
                    res = keyVal[1];
                    break;
                }
            }
        }
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.getLocation = function (){
    var res = this._location;
    if (FoodApp.Common.jsCommonUtils.inst.isEmpty(this._location)){
        res = document.location.protocol + "//" + document.location.host + "/";
    }
    return res;
};
FoodApp.Common.jsCommonUtils.prototype.getPrefix = function (tmp){
    var idx = tmp.indexOf(".");
    var prefix = tmp.substr(0, idx + 1);
    return prefix;
};
FoodApp.Common.jsCommonUtils.prototype.removeFromArray = function (items, obj){
    var tmpArray =  [];
    for (var $i9 = 0,$l9 = items.length,tmp = items[$i9]; $i9 < $l9; $i9++, tmp = items[$i9]){
        if (tmp != obj){
            tmpArray.push(tmp);
        }
    }
    while (items.length > 0){
        items.pop();
    }
    for (var $i10 = 0,$l10 = tmpArray.length,tmp = tmpArray[$i10]; $i10 < $l10; $i10++, tmp = tmpArray[$i10]){
        items.push(tmp);
    }
};
FoodApp.Common.JsFoodApi = function (serverUrl, userId){
    FoodApp.Common.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.JsFoodApi.prototype.GetFoodsByDay = function (userId, day, handler){
    var url = FoodApp.Common.FoodsUrl.Inst.GetFoodsByDayUrl(userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
FoodApp.Common.JsFoodApi.prototype.GetAllFoods = function (handler){
    var url = FoodApp.Common.FoodsUrl.Inst.GetAllFoodsUrl(this._userId);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
FoodApp.Common.JsFoodApi.prototype.Buy = function (day, foodId, value, handler){
    var url = FoodApp.Common.FoodsUrl.Inst.GetBuyUrl(this._userId, day, foodId, value);
    this.SendPost(url, new Object(), $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
FoodApp.Common.JsFoodApi.prototype.ChangePrice = function (day, foodId, value, handler){
    var url = FoodApp.Common.FoodsUrl.Inst.GetChangePriceUrl(this._userId, day, foodId, value);
    this.SendPost(url, new Object(), $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
$Inherit(FoodApp.Common.JsFoodApi, FoodApp.Common.JsApiBase);
FoodApp.Common.JsMoneyApi = function (serverUrl, userId){
    FoodApp.Common.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.JsMoneyApi.prototype.Buy = function (day, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetBuyUrl(this._userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.AddMoney = function (userId, val, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetAddMoneyUrl(userId, val);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.RemoveMoney = function (userId, val, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetRemoveMoneyUrl(userId, val);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.GetMoney = function (userId, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetMoneyUrl(userId);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.CanBuy = function (day, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetCanBuyUrl(this._userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.Refund = function (day, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetRefundUrl(this._userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
FoodApp.Common.JsMoneyApi.prototype.CanRefund = function (day, handler){
    var url = FoodApp.Common.MoneyUrl.Inst.GetCanRefundUrl(this._userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        if (null != handler){
            handler(args);
        }
    }));
};
$Inherit(FoodApp.Common.JsMoneyApi, FoodApp.Common.JsApiBase);
FoodApp.Common.JsOrderApi = function (serverUrl, userId){
    FoodApp.Common.JsApiBase.call(this, serverUrl, userId);
};
FoodApp.Common.JsOrderApi.prototype.GetAllOrders = function (userId, handler){
    var url = FoodApp.Common.OrderUrl.Inst.GetAllOrdersUrl(userId);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
FoodApp.Common.JsOrderApi.prototype.GetOrdersByDay = function (userId, day, handler){
    var url = FoodApp.Common.OrderUrl.Inst.GetOrdersByDayUrl(userId, day);
    this.SendGet(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
FoodApp.Common.JsOrderApi.prototype.DeleteOrder = function (day, foodId, handler){
    var url = FoodApp.Common.OrderUrl.Inst.GetDeleteOrderUrl(this._userId, day, foodId);
    this.SendDelete(url, $CreateAnonymousDelegate(this, function (args){
        var res = this.Deserealize(args);
        FoodApp.Common.jsCommonUtils.inst.assert(null != res);
        if (null != handler){
            handler(res);
        }
    }));
};
$Inherit(FoodApp.Common.JsOrderApi, FoodApp.Common.JsApiBase);
FoodApp.Common.JsService = function (){
    this.FoodApi = null;
    this.OrderApi = null;
    this.MoneyApi = null;
    this.ToolsApi = null;
    this.UsersApi = null;
};
FoodApp.Common.JsService.Inst = new FoodApp.Common.JsService();
FoodApp.Common.JsService.prototype.Init = function (serverUrl, userId){
    this.FoodApi = new FoodApp.Common.JsFoodApi(serverUrl, userId);
    this.OrderApi = new FoodApp.Common.JsOrderApi(serverUrl, userId);
    this.MoneyApi = new FoodApp.Common.JsMoneyApi(serverUrl, userId);
    this.ToolsApi = new FoodApp.Common.JsToolsApi(serverUrl, userId);
    this.UsersApi = new FoodApp.Common.JsUsersApi(serverUrl, userId);
};
FoodApp.Common.MoneyUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.MoneyUrl.c_sMoneyPrefix = "api/money/";
FoodApp.Common.MoneyUrl.c_sGetMoney = "api/money/getMoney/{userId}/";
FoodApp.Common.MoneyUrl.c_sAddMoney = "api/money/addMoney/{userId}/{val}/";
FoodApp.Common.MoneyUrl.c_sRemoveMoney = "api/money/removeMoney/{userId}/{val}/";
FoodApp.Common.MoneyUrl.c_sBuy = "api/money/buy/{userId}/{day}/";
FoodApp.Common.MoneyUrl.c_sCanBuy = "api/money/canBuy/{userId}/{day}/";
FoodApp.Common.MoneyUrl.c_sRefund = "api/money/refund/{userId}/{day}/";
FoodApp.Common.MoneyUrl.c_sCanRefund = "api/money/canRefund/{userId}/{day}/";
FoodApp.Common.MoneyUrl.Inst = new FoodApp.Common.MoneyUrl();
FoodApp.Common.MoneyUrl.prototype.GetBuyUrl = function (userId, day){
    var res = this.FormatUrl("api/money/buy/{userId}/{day}/", userId, day);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetAddMoneyUrl = function (userId, val){
    var res = this.FormatUrl("api/money/addMoney/{userId}/{val}/", userId, val);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetRemoveMoneyUrl = function (userId, val){
    var res = this.FormatUrl("api/money/removeMoney/{userId}/{val}/", userId, val);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetMoneyUrl = function (userId){
    var res = this.FormatUrl("api/money/getMoney/{userId}/", userId);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetCanBuyUrl = function (userId, day){
    var res = this.FormatUrl("api/money/canBuy/{userId}/{day}/", userId, day);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetRefundUrl = function (userId, day){
    var res = this.FormatUrl("api/money/refund/{userId}/{day}/", userId, day);
    return res;
};
FoodApp.Common.MoneyUrl.prototype.GetCanRefundUrl = function (userId, day){
    var res = this.FormatUrl("api/money/canRefund/{userId}/{day}/", userId, day);
    return res;
};
$Inherit(FoodApp.Common.MoneyUrl, FoodApp.Common.UrlBase);
FoodApp.Common.OrderUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.OrderUrl.c_sOrdersPrefix = "api/orders";
FoodApp.Common.OrderUrl.c_sGetAllOrders = "api/orders/{userId}/";
FoodApp.Common.OrderUrl.c_sGetOrdersByDay = "api/orders/{userId}/{day}";
FoodApp.Common.OrderUrl.c_sDeleteOrder = "api/orders/{userId}/{day}/{foodId}/";
FoodApp.Common.OrderUrl.Inst = new FoodApp.Common.OrderUrl();
FoodApp.Common.OrderUrl.prototype.GetAllOrdersUrl = function (ngUserId){
    return this.FormatUrl("api/orders/{userId}/", ngUserId);
};
FoodApp.Common.OrderUrl.prototype.GetOrdersByDayUrl = function (ngUserId, day){
    return this.FormatUrl("api/orders/{userId}/{day}", ngUserId, day);
};
FoodApp.Common.OrderUrl.prototype.GetDeleteOrderUrl = function (ngUserId, day, foodId){
    return this.FormatUrl("api/orders/{userId}/{day}/{foodId}/", ngUserId, day, foodId);
};
$Inherit(FoodApp.Common.OrderUrl, FoodApp.Common.UrlBase);
FoodApp.Common.PropousalUrl = function (){
};
FoodApp.Common.PropousalUrl.c_sGetPropousal = "api/propousal";
FoodApp.Common.PropousalUrl.c_sGetPropousalByDay = "api/propousal/{userId}/{dayOfWeek}/";
FoodApp.Common.PropousalUrl.c_sGetPropousals = "api/propousal/{userId}/";
FoodApp.Common.PropousalUrl.c_sBuy = "api/propousal/{userId}/{dayOfWeek}/";
FoodApp.Common.ToolsUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.ToolsUrl.c_sFoodsPrefix = "api/tools";
FoodApp.Common.ToolsUrl.c_sClearTodayOrders = "api/tools/clearTodayOrders/";
FoodApp.Common.ToolsUrl.Inst = new FoodApp.Common.ToolsUrl();
FoodApp.Common.ToolsUrl.prototype.GetClearTodayOrdersUrl = function (){
    var res = this.FormatUrl("api/tools/clearTodayOrders/");
    return res;
};
$Inherit(FoodApp.Common.ToolsUrl, FoodApp.Common.UrlBase);
FoodApp.Common.UsersUrl = function (){
    FoodApp.Common.UrlBase.call(this);
};
FoodApp.Common.UsersUrl.c_sUsersPrefix = "api/users/";
FoodApp.Common.UsersUrl.c_sGetUsers = "api/users/users/";
FoodApp.Common.UsersUrl.Inst = new FoodApp.Common.UsersUrl();
FoodApp.Common.UsersUrl.prototype.GetUsers = function (){
    var res = this.FormatUrl("api/users/users/");
    return res;
};
$Inherit(FoodApp.Common.UsersUrl, FoodApp.Common.UrlBase);

